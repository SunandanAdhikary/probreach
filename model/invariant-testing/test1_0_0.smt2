(set-logic QF_NRA_ODE)
(declare-fun y () Real)
(declare-fun x () Real)
(declare-fun y_0_0 () Real)
(declare-fun y_0_t () Real)
(declare-fun x_0_0 () Real)
(declare-fun x_0_t () Real)
(declare-fun time_0 () Real)
(declare-fun mode_0 () Real)
(define-ode flow_1 ((= d/dt[x] 0) (= d/dt[y] 0)))
(assert (<= 0 y_0_0))
(assert (<= y_0_0 1))
(assert (<= 0 y_0_t))
(assert (<= y_0_t 1))
(assert (<= 0 x_0_0))
(assert (<= x_0_0 1))
(assert (<= 0 x_0_t))
(assert (<= x_0_t 1))
(assert (<= 0 time_0 [0.000000]))
(assert (<= time_0 1 [0.000000]))
(assert (<= 1 mode_0))
(assert (<= mode_0 1))
(assert (and (and (>= y_0_0 0) (>= x_0_0 0)) (= mode_0 1) (= [x_0_t y_0_t] (integral 0. time_0 [x_0_0 y_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (and (< y_0_t 0.5) (< x_0_t 0.5))) (< y_0_0 0.5) (< x_0_0 0.5) (< y_0_t 0.5) (< x_0_t 0.5) (= mode_0 1) (> (* x_0_t y_0_t) 0.25)))
(check-sat)
(exit)

/*
 * This model describes dynamics for a single battery.
 *
 * Condition for the battery to be dead is gamma1<=(1-c1)*delta1
 *
 *
 */

//#define kprime1 0.122
#define c1 0.166
#define kprime1_l 0.122
#define kprime1_u 0.122

[-100,100] delta1;
[-100,100] gamma1;
[-100,100] i;
[0,1000] t;
[0,1000] time;
[0.1,0.2] kprime1;

// consume
{
mode 1;
invt:
(t <= 0.3);
flow:
d/dt[delta1]=i/c1;
d/dt[gamma1]=-i;
d/dt[i]=0;
d/dt[t]=1;
d/dt[kprime1]=0;
jump:
(and(t=0.3))==>@2(and(t'=t)(i'=i)(delta1'=delta1)(gamma1'=gamma1));
}

// recover
{
mode 2;
flow:
d/dt[delta1]= - delta1 * kprime1;
d/dt[gamma1]=0;
d/dt[i]=0;
d/dt[t]=1;
d/dt[kprime1]=0;
jump:
(and(delta1 <= 0))==>@1(and(t'=0)(i'=i)(delta1'=delta1)(gamma1'=gamma1));
}

init:
@1(and(t=0)(i=2.5)(delta1=0)(gamma1=5.5)(kprime1>=kprime1_l)(kprime1<=kprime1_u));
goal:
// battery is empty
@1(and(gamma1<=(1-c1)*delta1));

(set-logic QF_NRA_ODE)
(declare-fun delta1 () Real)
(declare-fun delta1_0_0 () Real)
(declare-fun delta1_0_t () Real)
(assert (>= delta1_0_0 (- 100)))
(assert (>= delta1_0_t (- 100)))
(assert (<= delta1_0_0  100))
(assert (<= delta1_0_t  100))
(declare-fun delta1_1_0 () Real)
(declare-fun delta1_1_t () Real)
(assert (>= delta1_1_0 (- 100)))
(assert (>= delta1_1_t (- 100)))
(assert (<= delta1_1_0  100))
(assert (<= delta1_1_t  100))
(declare-fun delta1_2_0 () Real)
(declare-fun delta1_2_t () Real)
(assert (>= delta1_2_0 (- 100)))
(assert (>= delta1_2_t (- 100)))
(assert (<= delta1_2_0  100))
(assert (<= delta1_2_t  100))
(declare-fun delta1_3_0 () Real)
(declare-fun delta1_3_t () Real)
(assert (>= delta1_3_0 (- 100)))
(assert (>= delta1_3_t (- 100)))
(assert (<= delta1_3_0  100))
(assert (<= delta1_3_t  100))
(declare-fun delta1_4_0 () Real)
(declare-fun delta1_4_t () Real)
(assert (>= delta1_4_0 (- 100)))
(assert (>= delta1_4_t (- 100)))
(assert (<= delta1_4_0  100))
(assert (<= delta1_4_t  100))
(declare-fun delta2 () Real)
(declare-fun delta2_0_0 () Real)
(declare-fun delta2_0_t () Real)
(assert (>= delta2_0_0 (- 100)))
(assert (>= delta2_0_t (- 100)))
(assert (<= delta2_0_0  100))
(assert (<= delta2_0_t  100))
(declare-fun delta2_1_0 () Real)
(declare-fun delta2_1_t () Real)
(assert (>= delta2_1_0 (- 100)))
(assert (>= delta2_1_t (- 100)))
(assert (<= delta2_1_0  100))
(assert (<= delta2_1_t  100))
(declare-fun delta2_2_0 () Real)
(declare-fun delta2_2_t () Real)
(assert (>= delta2_2_0 (- 100)))
(assert (>= delta2_2_t (- 100)))
(assert (<= delta2_2_0  100))
(assert (<= delta2_2_t  100))
(declare-fun delta2_3_0 () Real)
(declare-fun delta2_3_t () Real)
(assert (>= delta2_3_0 (- 100)))
(assert (>= delta2_3_t (- 100)))
(assert (<= delta2_3_0  100))
(assert (<= delta2_3_t  100))
(declare-fun delta2_4_0 () Real)
(declare-fun delta2_4_t () Real)
(assert (>= delta2_4_0 (- 100)))
(assert (>= delta2_4_t (- 100)))
(assert (<= delta2_4_0  100))
(assert (<= delta2_4_t  100))
(declare-fun gamma1 () Real)
(declare-fun gamma1_0_0 () Real)
(declare-fun gamma1_0_t () Real)
(assert (>= gamma1_0_0 (- 100)))
(assert (>= gamma1_0_t (- 100)))
(assert (<= gamma1_0_0  100))
(assert (<= gamma1_0_t  100))
(declare-fun gamma1_1_0 () Real)
(declare-fun gamma1_1_t () Real)
(assert (>= gamma1_1_0 (- 100)))
(assert (>= gamma1_1_t (- 100)))
(assert (<= gamma1_1_0  100))
(assert (<= gamma1_1_t  100))
(declare-fun gamma1_2_0 () Real)
(declare-fun gamma1_2_t () Real)
(assert (>= gamma1_2_0 (- 100)))
(assert (>= gamma1_2_t (- 100)))
(assert (<= gamma1_2_0  100))
(assert (<= gamma1_2_t  100))
(declare-fun gamma1_3_0 () Real)
(declare-fun gamma1_3_t () Real)
(assert (>= gamma1_3_0 (- 100)))
(assert (>= gamma1_3_t (- 100)))
(assert (<= gamma1_3_0  100))
(assert (<= gamma1_3_t  100))
(declare-fun gamma1_4_0 () Real)
(declare-fun gamma1_4_t () Real)
(assert (>= gamma1_4_0 (- 100)))
(assert (>= gamma1_4_t (- 100)))
(assert (<= gamma1_4_0  100))
(assert (<= gamma1_4_t  100))
(declare-fun gamma2 () Real)
(declare-fun gamma2_0_0 () Real)
(declare-fun gamma2_0_t () Real)
(assert (>= gamma2_0_0 (- 100)))
(assert (>= gamma2_0_t (- 100)))
(assert (<= gamma2_0_0  100))
(assert (<= gamma2_0_t  100))
(declare-fun gamma2_1_0 () Real)
(declare-fun gamma2_1_t () Real)
(assert (>= gamma2_1_0 (- 100)))
(assert (>= gamma2_1_t (- 100)))
(assert (<= gamma2_1_0  100))
(assert (<= gamma2_1_t  100))
(declare-fun gamma2_2_0 () Real)
(declare-fun gamma2_2_t () Real)
(assert (>= gamma2_2_0 (- 100)))
(assert (>= gamma2_2_t (- 100)))
(assert (<= gamma2_2_0  100))
(assert (<= gamma2_2_t  100))
(declare-fun gamma2_3_0 () Real)
(declare-fun gamma2_3_t () Real)
(assert (>= gamma2_3_0 (- 100)))
(assert (>= gamma2_3_t (- 100)))
(assert (<= gamma2_3_0  100))
(assert (<= gamma2_3_t  100))
(declare-fun gamma2_4_0 () Real)
(declare-fun gamma2_4_t () Real)
(assert (>= gamma2_4_0 (- 100)))
(assert (>= gamma2_4_t (- 100)))
(assert (<= gamma2_4_0  100))
(assert (<= gamma2_4_t  100))
(declare-fun i () Real)
(declare-fun i_0_0 () Real)
(declare-fun i_0_t () Real)
(assert (>= i_0_0  0))
(assert (>= i_0_t  0))
(assert (<= i_0_0  10))
(assert (<= i_0_t  10))
(declare-fun i_1_0 () Real)
(declare-fun i_1_t () Real)
(assert (>= i_1_0  0))
(assert (>= i_1_t  0))
(assert (<= i_1_0  10))
(assert (<= i_1_t  10))
(declare-fun i_2_0 () Real)
(declare-fun i_2_t () Real)
(assert (>= i_2_0  0))
(assert (>= i_2_t  0))
(assert (<= i_2_0  10))
(assert (<= i_2_t  10))
(declare-fun i_3_0 () Real)
(declare-fun i_3_t () Real)
(assert (>= i_3_0  0))
(assert (>= i_3_t  0))
(assert (<= i_3_0  10))
(assert (<= i_3_t  10))
(declare-fun i_4_0 () Real)
(declare-fun i_4_t () Real)
(assert (>= i_4_0  0))
(assert (>= i_4_t  0))
(assert (<= i_4_0  10))
(assert (<= i_4_t  10))
(declare-fun kprime () Real)
(declare-fun kprime_0_0 () Real)
(declare-fun kprime_0_t () Real)
(declare-fun kprime_1_0 () Real)
(declare-fun kprime_1_t () Real)
(declare-fun kprime_2_0 () Real)
(declare-fun kprime_2_t () Real)
(declare-fun kprime_3_0 () Real)
(declare-fun kprime_3_t () Real)
(declare-fun kprime_4_0 () Real)
(declare-fun kprime_4_t () Real)
(declare-fun t_j1 () Real)
(declare-fun t_j1_0_0 () Real)
(declare-fun t_j1_0_t () Real)
(assert (>= t_j1_0_0  0.5))
(assert (>= t_j1_0_t  0.5))
(assert (<= t_j1_0_0  1.5))
(assert (<= t_j1_0_t  1.5))
(declare-fun t_j1_1_0 () Real)
(declare-fun t_j1_1_t () Real)
(assert (>= t_j1_1_0  0.5))
(assert (>= t_j1_1_t  0.5))
(assert (<= t_j1_1_0  1.5))
(assert (<= t_j1_1_t  1.5))
(declare-fun t_j1_2_0 () Real)
(declare-fun t_j1_2_t () Real)
(assert (>= t_j1_2_0  0.5))
(assert (>= t_j1_2_t  0.5))
(assert (<= t_j1_2_0  1.5))
(assert (<= t_j1_2_t  1.5))
(declare-fun t_j1_3_0 () Real)
(declare-fun t_j1_3_t () Real)
(assert (>= t_j1_3_0  0.5))
(assert (>= t_j1_3_t  0.5))
(assert (<= t_j1_3_0  1.5))
(assert (<= t_j1_3_t  1.5))
(declare-fun t_j1_4_0 () Real)
(declare-fun t_j1_4_t () Real)
(assert (>= t_j1_4_0  0.5))
(assert (>= t_j1_4_t  0.5))
(assert (<= t_j1_4_0  1.5))
(assert (<= t_j1_4_t  1.5))
(declare-fun t_j2 () Real)
(declare-fun t_j2_0_0 () Real)
(declare-fun t_j2_0_t () Real)
(assert (>= t_j2_0_0  0.5))
(assert (>= t_j2_0_t  0.5))
(assert (<= t_j2_0_0  1.5))
(assert (<= t_j2_0_t  1.5))
(declare-fun t_j2_1_0 () Real)
(declare-fun t_j2_1_t () Real)
(assert (>= t_j2_1_0  0.5))
(assert (>= t_j2_1_t  0.5))
(assert (<= t_j2_1_0  1.5))
(assert (<= t_j2_1_t  1.5))
(declare-fun t_j2_2_0 () Real)
(declare-fun t_j2_2_t () Real)
(assert (>= t_j2_2_0  0.5))
(assert (>= t_j2_2_t  0.5))
(assert (<= t_j2_2_0  1.5))
(assert (<= t_j2_2_t  1.5))
(declare-fun t_j2_3_0 () Real)
(declare-fun t_j2_3_t () Real)
(assert (>= t_j2_3_0  0.5))
(assert (>= t_j2_3_t  0.5))
(assert (<= t_j2_3_0  1.5))
(assert (<= t_j2_3_t  1.5))
(declare-fun t_j2_4_0 () Real)
(declare-fun t_j2_4_t () Real)
(assert (>= t_j2_4_0  0.5))
(assert (>= t_j2_4_t  0.5))
(assert (<= t_j2_4_0  1.5))
(assert (<= t_j2_4_t  1.5))
(declare-fun t_j3 () Real)
(declare-fun t_j3_0_0 () Real)
(declare-fun t_j3_0_t () Real)
(assert (>= t_j3_0_0  0.5))
(assert (>= t_j3_0_t  0.5))
(assert (<= t_j3_0_0  1.5))
(assert (<= t_j3_0_t  1.5))
(declare-fun t_j3_1_0 () Real)
(declare-fun t_j3_1_t () Real)
(assert (>= t_j3_1_0  0.5))
(assert (>= t_j3_1_t  0.5))
(assert (<= t_j3_1_0  1.5))
(assert (<= t_j3_1_t  1.5))
(declare-fun t_j3_2_0 () Real)
(declare-fun t_j3_2_t () Real)
(assert (>= t_j3_2_0  0.5))
(assert (>= t_j3_2_t  0.5))
(assert (<= t_j3_2_0  1.5))
(assert (<= t_j3_2_t  1.5))
(declare-fun t_j3_3_0 () Real)
(declare-fun t_j3_3_t () Real)
(assert (>= t_j3_3_0  0.5))
(assert (>= t_j3_3_t  0.5))
(assert (<= t_j3_3_0  1.5))
(assert (<= t_j3_3_t  1.5))
(declare-fun t_j3_4_0 () Real)
(declare-fun t_j3_4_t () Real)
(assert (>= t_j3_4_0  0.5))
(assert (>= t_j3_4_t  0.5))
(assert (<= t_j3_4_0  1.5))
(assert (<= t_j3_4_t  1.5))
(declare-fun t_j4 () Real)
(declare-fun t_j4_0_0 () Real)
(declare-fun t_j4_0_t () Real)
(assert (>= t_j4_0_0  0.5))
(assert (>= t_j4_0_t  0.5))
(assert (<= t_j4_0_0  1.5))
(assert (<= t_j4_0_t  1.5))
(declare-fun t_j4_1_0 () Real)
(declare-fun t_j4_1_t () Real)
(assert (>= t_j4_1_0  0.5))
(assert (>= t_j4_1_t  0.5))
(assert (<= t_j4_1_0  1.5))
(assert (<= t_j4_1_t  1.5))
(declare-fun t_j4_2_0 () Real)
(declare-fun t_j4_2_t () Real)
(assert (>= t_j4_2_0  0.5))
(assert (>= t_j4_2_t  0.5))
(assert (<= t_j4_2_0  1.5))
(assert (<= t_j4_2_t  1.5))
(declare-fun t_j4_3_0 () Real)
(declare-fun t_j4_3_t () Real)
(assert (>= t_j4_3_0  0.5))
(assert (>= t_j4_3_t  0.5))
(assert (<= t_j4_3_0  1.5))
(assert (<= t_j4_3_t  1.5))
(declare-fun t_j4_4_0 () Real)
(declare-fun t_j4_4_t () Real)
(assert (>= t_j4_4_0  0.5))
(assert (>= t_j4_4_t  0.5))
(assert (<= t_j4_4_0  1.5))
(assert (<= t_j4_4_t  1.5))
(declare-fun tau () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(assert (>= tau_0_0  0))
(assert (>= tau_0_t  0))
(assert (<= tau_0_0  10))
(assert (<= tau_0_t  10))
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(assert (>= tau_1_0  0))
(assert (>= tau_1_t  0))
(assert (<= tau_1_0  10))
(assert (<= tau_1_t  10))
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(assert (>= tau_2_0  0))
(assert (>= tau_2_t  0))
(assert (<= tau_2_0  10))
(assert (<= tau_2_t  10))
(declare-fun tau_3_0 () Real)
(declare-fun tau_3_t () Real)
(assert (>= tau_3_0  0))
(assert (>= tau_3_t  0))
(assert (<= tau_3_0  10))
(assert (<= tau_3_t  10))
(declare-fun tau_4_0 () Real)
(declare-fun tau_4_t () Real)
(assert (>= tau_4_0  0))
(assert (>= tau_4_t  0))
(assert (<= tau_4_0  10))
(assert (<= tau_4_t  10))
(declare-fun time_0 () Real)
(assert (>= time_0  0))
(assert (<= time_0  10))
(declare-fun time_1 () Real)
(assert (>= time_1  0))
(assert (<= time_1  10))
(declare-fun time_2 () Real)
(assert (>= time_2  0))
(assert (<= time_2  10))
(declare-fun time_3 () Real)
(assert (>= time_3  0))
(assert (<= time_3  10))
(declare-fun time_4 () Real)
(assert (>= time_4  0))
(assert (<= time_4  10))
(define-ode flow_1 ((= d/dt[delta1] (/ i 0.166))(= d/dt[delta2]  0)(= d/dt[gamma1] (- i))(= d/dt[gamma2]  0)(= d/dt[i]  i)(= d/dt[kprime]  0)(= d/dt[t_j1]  0)(= d/dt[t_j2]  0)(= d/dt[t_j3]  0)(= d/dt[t_j4]  0)(= d/dt[tau]  1)))
(define-ode flow_2 ((= d/dt[delta1] (*(- delta1) kprime))(= d/dt[delta2] (/ i 0.166))(= d/dt[gamma1]  0)(= d/dt[gamma2] (- i))(= d/dt[i]  i)(= d/dt[kprime]  0)(= d/dt[t_j1]  0)(= d/dt[t_j2]  0)(= d/dt[t_j3]  0)(= d/dt[t_j4]  0)(= d/dt[tau]  1)))
(define-ode flow_3 ((= d/dt[delta1] (/ i 0.166))(= d/dt[delta2] (*(- delta2) kprime))(= d/dt[gamma1] (- i))(= d/dt[gamma2]  0)(= d/dt[i]  i)(= d/dt[kprime]  0)(= d/dt[t_j1]  0)(= d/dt[t_j2]  0)(= d/dt[t_j3]  0)(= d/dt[t_j4]  0)(= d/dt[tau]  1)))
(define-ode flow_4 ((= d/dt[delta1] (*(- delta1) kprime))(= d/dt[delta2] (/ i 0.166))(= d/dt[gamma1]  0)(= d/dt[gamma2] (- i))(= d/dt[i]  i)(= d/dt[kprime]  0)(= d/dt[t_j1]  0)(= d/dt[t_j2]  0)(= d/dt[t_j3]  0)(= d/dt[t_j4]  0)(= d/dt[tau]  1)))
(define-ode flow_5 ((= d/dt[delta1] (/ i 0.166))(= d/dt[delta2] (*(- delta2) kprime))(= d/dt[gamma1] (- i))(= d/dt[gamma2]  0)(= d/dt[i]  i)(= d/dt[kprime]  0)(= d/dt[t_j1]  0)(= d/dt[t_j2]  0)(= d/dt[t_j3]  0)(= d/dt[t_j4]  0)(= d/dt[tau]  1)))
(assert (and 
(or ((and(= tau_0_0 0)(= i_0_0 0.15)(= delta1_0_0 0)(= gamma1_0_0 5.0)(= delta2_0_0 0)(= gamma2_0_0 5.0))))
(>= kprime_0_0 0.144845)
(<= kprime_0_0 0.144845)
(>= t_j1_0_0 1.24433)
(<= t_j1_0_0 1.24433)
(>= t_j2_0_0 0.920353)
(<= t_j2_0_0 0.920353)
(>= t_j3_0_0 0.684645)
(<= t_j3_0_0 0.684645)
(>= t_j4_0_0 0.905123)
(<= t_j4_0_0 0.905123)
(= [delta1_0_t delta2_0_t gamma1_0_t gamma2_0_t i_0_t kprime_0_t t_j1_0_t t_j2_0_t t_j3_0_t t_j4_0_t tau_0_t ] (integral 0.0 time_0 [delta1_0_0 delta2_0_0 gamma1_0_0 gamma2_0_0 i_0_0 kprime_0_0 t_j1_0_0 t_j2_0_0 t_j3_0_0 t_j4_0_0 tau_0_0 ] flow_1))
(and(>= tau_0_t t_j1_0_t))
(= delta1_1_0  delta1_0_t)(= delta2_1_0  delta2_0_t)(= gamma1_1_0  gamma1_0_t)(= gamma2_1_0  gamma2_0_t)(= i_1_0  0.15)(= tau_1_0  tau_0_t)(= [delta1_1_t delta2_1_t gamma1_1_t gamma2_1_t i_1_t kprime_1_t t_j1_1_t t_j2_1_t t_j3_1_t t_j4_1_t tau_1_t ] (integral 0.0 time_1 [delta1_1_0 delta2_1_0 gamma1_1_0 gamma2_1_0 i_1_0 kprime_1_0 t_j1_1_0 t_j2_1_0 t_j3_1_0 t_j4_1_0 tau_1_0 ] flow_2))
(and(>= tau_1_t(+ t_j1_1_t t_j2_1_t)))
(= delta1_2_0  delta1_1_t)(= delta2_2_0  delta2_1_t)(= gamma1_2_0  gamma1_1_t)(= gamma2_2_0  gamma2_1_t)(= i_2_0  0.15)(= tau_2_0  tau_1_t)(= [delta1_2_t delta2_2_t gamma1_2_t gamma2_2_t i_2_t kprime_2_t t_j1_2_t t_j2_2_t t_j3_2_t t_j4_2_t tau_2_t ] (integral 0.0 time_2 [delta1_2_0 delta2_2_0 gamma1_2_0 gamma2_2_0 i_2_0 kprime_2_0 t_j1_2_0 t_j2_2_0 t_j3_2_0 t_j4_2_0 tau_2_0 ] flow_3))
(and(>= tau_2_t(+(+ t_j1_2_t t_j2_2_t) t_j3_2_t)))
(= delta1_3_0  delta1_2_t)(= delta2_3_0  delta2_2_t)(= gamma1_3_0  gamma1_2_t)(= gamma2_3_0  gamma2_2_t)(= i_3_0  0.15)(= tau_3_0  0)(= [delta1_3_t delta2_3_t gamma1_3_t gamma2_3_t i_3_t kprime_3_t t_j1_3_t t_j2_3_t t_j3_3_t t_j4_3_t tau_3_t ] (integral 0.0 time_3 [delta1_3_0 delta2_3_0 gamma1_3_0 gamma2_3_0 i_3_0 kprime_3_0 t_j1_3_0 t_j2_3_0 t_j3_3_0 t_j4_3_0 tau_3_0 ] flow_4))
(and(>= tau_3_t(+(+(+ t_j1_3_t t_j2_3_t) t_j3_3_t) t_j4_3_t)))
(= delta1_4_0  delta1_3_t)(= delta2_4_0  delta2_3_t)(= gamma1_4_0  gamma1_3_t)(= gamma2_4_0  gamma2_3_t)(= i_4_0  0.15)(= tau_4_0  0)(= [delta1_4_t delta2_4_t gamma1_4_t gamma2_4_t i_4_t kprime_4_t t_j1_4_t t_j2_4_t t_j3_4_t t_j4_4_t tau_4_t ] (integral 0.0 time_4 [delta1_4_0 delta2_4_0 gamma1_4_0 gamma2_4_0 i_4_0 kprime_4_0 t_j1_4_0 t_j2_4_0 t_j3_4_0 t_j4_4_0 tau_4_0 ] flow_5))
(or ((and(= tau_4_t 5.0)(and(> gamma1_4_t(*(- 1 0.166) delta1_4_t))(> gamma2_4_t(*(- 1 0.166) delta2_4_t))))))))
(check-sat)
(exit)

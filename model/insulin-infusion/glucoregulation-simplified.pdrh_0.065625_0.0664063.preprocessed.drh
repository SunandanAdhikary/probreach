[-2.05, 2.15] x3;
[-10, 10] x1;
[-10, 10] x2;
[-10, 10] I;
[-50, 50] S1;
[-50, 50] S2;
[-1000, 1000] Q1;
[-1000, 1000] Q2;
[0, 500] tau;
[0, 1000] time;
{
mode 1;
invt:
flow:
 d/dt[Q1] = - ((0.0097 * 100) * (Q1 / (0.16 * 100))/((Q1 / (0.16 * 100)) + 1) / 0.85) - x1 * Q1 + 0.066 * Q2 - 0 + (0.0161 * 100) * (1 - x3) + (8 * 180) / 1000;
 d/dt[Q2] = x1 * Q1 - (0.066 + x2) * Q2;
 d/dt[S1] = 0.0 - S1 / 55;
 d/dt[S2] = (S1 - S2) / 55;
 d/dt[I] = S2 / (55 * (0.12 * 100)) - 0.138 * I;
 d/dt[x1] = - 0.006 * x1 + 0.0034 * I;
 d/dt[x2] = - 0.06 * x2 + 0.056 * I;
 d/dt[x3] = - 0.03 * x3 + 0.024 * I;
 d/dt[tau] = 0.5;
jump:
 ((Q1 / (0.16 * 100)) = 10) ==> @2 (and
      (I' = I) 
      (x1' = x1) 
      (x2' = x2) 
      (x3' = x3) 
      (tau' = 0) 
      (S1' = S1) 
      (S2' = S2)
      (Q1' = Q1)
      (Q2' = Q2)
     );
}
{
mode 2;
invt:
flow:
 d/dt[Q1] = - ((0.0097 * 100) * (Q1 / (0.16 * 100))/((Q1 / (0.16 * 100)) + 1) / 0.85) - x1 * Q1 + 0.066 * Q2 - 0 + (0.0161 * 100) * (1 - x3) + (8 * 180) / 1000;
 d/dt[Q2] = x1 * Q1 - (0.066 + x2) * Q2;
 d/dt[S1] = 0.36 - S1 / 55;
 d/dt[S2] = (S1 - S2) / 55;
 d/dt[I] = S2 / (55 * (0.12 * 100)) - 0.138 * I;
 d/dt[x1] = - 0.006 * x1 + 0.0034 * I;
 d/dt[x2] = - 0.06 * x2 + 0.056 * I;
 d/dt[x3] = - 0.03 * x3 + 0.024 * I;
 d/dt[tau] = 0.5;
jump:
}
init:
@1 (and
  (I = 0.03)
  (x1 = 0.03)
  (x2 = 0.045)
  (x3 >= 0.065625)
  (x3 <= 0.0664063)
  (tau = 0.0)
  (S1 = 4.2)
  (S2 = 4.0)
  (Q1 = 64.0)
  (Q2 = 40.0)
 );
goal:
@2 (and (tau = 60) ((Q1 / (0.16 * 100)) <= 10));

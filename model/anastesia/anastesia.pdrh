#define M 35 // (kg) body mass
#define V1 (458.4*M)
#define k10 0.1527*M^(-0.3)
#define k12 0.114
#define k13 0.0419
#define k21 0.055
#define k31 0.0033
#define Td 20
//#define p1 190

#define cp_min 1.0
#define cp_max 6.0
#define c1_min 0.0
#define c1_max 10.0
#define c2_min 0.0
#define c2_max 10.0

[1, 6] 	cp; // (mug/l)
[0, 10]	c1; // (mug/l)
[0, 10] c2; // (mug/l)
[0, 20000] u; // (mug/kg*min)
[0, 80] tau; // (min)
[0, 60] time;
[150, 250] p1;

//dist_normal(200,10) p1;

{
mode 1;
flow:
	d/dt[cp] = -(k10+k12+k13)*cp + k12*c1 + k13*c2 + u / V1;
	d/dt[c1] = k21*cp - k21*c1;
	d/dt[c2] = k31*cp - k31*c2;
	d/dt[u] = 0.0;
	d/dt[tau] = 1.0;
	d/dt[p1] = 0.0;
jump:
	(tau = Td/2) ==> @2(and (cp' = cp)(c1' = c1)(c2' = c2)(tau' = tau)(u' = 0)(p1'=p1));
}

{
mode 2;
flow:
    d/dt[cp] = -(k10+k12+k13)*cp + k12*c1 + k13*c2 + u / V1;
    d/dt[c1] = k21*cp - k21*c1;
    d/dt[c2] = k31*cp - k31*c2;
    d/dt[u] = 0.0;
    d/dt[tau] = 1.0;
	d/dt[p1] = 0.0;
jump:
	(tau = Td) ==> @3(and (cp' = cp)(c1' = c1)(c2' = c2)(tau' = tau)(u' = 10000)(p1'=p1));	
}

{
mode 3;
flow:
    d/dt[cp] = -(k10+k12+k13)*cp + k12*c1 + k13*c2 + u / V1;
    d/dt[c1] = k21*cp - k21*c1;
    d/dt[c2] = k31*cp - k31*c2;
    //d/dt[u] = p1*sin(tau-Td)*sin(tau-Td) + p1*tau*2*sin(tau-Td)*cos(tau-Td);
    d/dt[u] = 0.0;
    d/dt[tau] = 1.0;
    d/dt[p1] = 0.0;
jump:

}



init:
@1 (and (cp = 3.0)(c1 = 3.0)(c2 = 3.0)(u = 7000)(tau = 0)(p1 >= 150)(p1 <= 151));

goal:
//@1 (and (tau = 10));
//@2 (and (tau = 10));
//@3 (and (tau = 60));
@3 (not (and (cp >= cp_min)(cp <= cp_max)(c1 >= c1_min)(c1 <= c1_max)(c2 >= c2_min)(c2 <= c2_max)));
//@3 (cp > cp_max);






